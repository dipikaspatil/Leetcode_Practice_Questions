763. Partition Labels

A string S of lowercase letters is given. We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.

Example 1:
Input: S = "ababcbacadefegdehijhklij"
Output: [9,7,8]
Explanation:
The partition is "ababcbaca", "defegde", "hijhklij".
This is a partition so that each letter appears in at most one part.
A partition like "ababcbacadefegde", "hijhklij" is incorrect, because it splits S into less parts.
Note:

S will have length in range [1, 500].
S will consist of lowercase letters ('a' to 'z') only.

-----------------------------------------------------------------------------

class Solution {
public:
    vector<int> partitionLabels(string S) {
        int arr[26] = {0};
        
        for (int i = 0; i < S.length(); ++i) {
            arr[S[i] - 'a'] = i;
        }
        
        vector<int> ret_vect;
        int length  = -1;
        int org_length = 0;
        for (int i = 0; i < S.length(); ++i) {
            if (length < arr[S[i] - 'a']) {
                length = arr[S[i] - 'a'];
            }
            if (length == i) {
                ret_vect.push_back(length + 1 - org_length);
                org_length = length + 1;
                length = -1;
            }
        }
        
        return ret_vect;
        
    }
};