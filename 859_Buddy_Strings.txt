859. Buddy Strings

Given two strings A and B of lowercase letters, return true if and only if we can swap two letters in A so that the result equals B.

 

Example 1:

Input: A = "ab", B = "ba"
Output: true
Example 2:

Input: A = "ab", B = "ab"
Output: false
Example 3:

Input: A = "aa", B = "aa"
Output: true
Example 4:

Input: A = "aaaaaaabc", B = "aaaaaaacb"
Output: true
Example 5:

Input: A = "", B = "aa"
Output: false
 
 
---------------------------------------------------------------------------------

class Solution {
public:
    bool buddyStrings(string A, string B) {
        if (A.length() != B.length()) {
            return false;
        }
        if (A.length() <= 1) {
            return false;
        }
        //if A and B are same - just check if there is any char more than once if so we can only replace that one and can return true
        int arr[26] = {0};
        if (A == B) {
            for (int i = 0; i < A.length(); ++i) {
                arr[A[i] - 'a'] += 1;
                if (arr[A[i]- 'a'] > 1) {
                    return true;
                }
            }
        } else {
            //if A != B -- char at exact 2 places should differ and char ar two thoses places of A and B can be swapped
            int index1 = -1, index2 = -1;
            for (int i = 0; i < A.length(); ++i) {
                if (A[i] != B[i]) {
                    if (index1 == -1) {
                        index1 = i;
                    } else if (index2 == -1) {
                        index2 = i;
                    } else {
                        return false;
                    }
                } 
            }
            
            if (index2 == -1) {
                return false;
            }
            
            if (A[index1] == B[index2] && B[index1] == A[index2]) {
                return true;
            }
        }
        return false;
    }
};